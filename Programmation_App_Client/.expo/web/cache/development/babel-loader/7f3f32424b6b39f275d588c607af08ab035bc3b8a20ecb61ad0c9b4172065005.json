{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function SignOutScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(TokenContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    token = _useContext2[0],\n    setToken = _useContext2[1];\n  var _useContext3 = useContext(UsernameContext),\n    _useContext4 = _slicedToArray(_useContext3, 2),\n    username = _useContext4[0],\n    setUsername = _useContext4[1];\n  var handleSignOut = function handleSignOut() {\n    setToken(null);\n    setUsername(null);\n    navigation.navigate('SignIn');\n  };\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      children: [\"Are you sure you want to sign out, \", username, \"?\"]\n    }), _jsx(Button, {\n      title: \"Sign Out\",\n      onPress: handleSignOut\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","View","Text","Button","TokenContext","UsernameContext","jsxs","_jsxs","jsx","_jsx","SignOutScreen","_ref","navigation","_useContext","_useContext2","_slicedToArray","token","setToken","_useContext3","_useContext4","username","setUsername","handleSignOut","navigate","children","title","onPress"],"sources":["/home/doguet221/Documents/l3/s1/programmationAppClient/tp4/Screen/signOutScreen.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { TokenContext, UsernameContext } from '../Context/Context';\n\nexport default function SignOutScreen({ navigation }) {\n  const [token, setToken] = useContext(TokenContext);\n  const [username, setUsername] = useContext(UsernameContext);\n\n  const handleSignOut = () => {\n    setToken(null);  // Réinitialise le token pour déconnecter l'utilisateur\n    setUsername(null);  // Réinitialise le nom d'utilisateur\n    navigation.navigate('SignIn');  // Retourne à l'écran de connexion\n  };\n\n  return (\n    <View>\n      <Text>Are you sure you want to sign out, {username}?</Text>\n      <Button title=\"Sign Out\" onPress={handleSignOut} />\n    </View>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE1C,SAASC,YAAY,EAAEC,eAAe;AAA6B,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEnE,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChD,IAAAC,WAAA,GAA0Bb,UAAU,CAACI,YAAY,CAAC;IAAAU,YAAA,GAAAC,cAAA,CAAAF,WAAA;IAA3CG,KAAK,GAAAF,YAAA;IAAEG,QAAQ,GAAAH,YAAA;EACtB,IAAAI,YAAA,GAAgClB,UAAU,CAACK,eAAe,CAAC;IAAAc,YAAA,GAAAJ,cAAA,CAAAG,YAAA;IAApDE,QAAQ,GAAAD,YAAA;IAAEE,WAAW,GAAAF,YAAA;EAE5B,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BL,QAAQ,CAAC,IAAI,CAAC;IACdI,WAAW,CAAC,IAAI,CAAC;IACjBT,UAAU,CAACW,QAAQ,CAAC,QAAQ,CAAC;EAC/B,CAAC;EAED,OACEhB,KAAA,CAACN,IAAI;IAAAuB,QAAA,GACHjB,KAAA,CAACL,IAAI;MAAAsB,QAAA,GAAC,qCAAmC,EAACJ,QAAQ,EAAC,GAAC;IAAA,CAAM,CAAC,EAC3DX,IAAA,CAACN,MAAM;MAACsB,KAAK,EAAC,UAAU;MAACC,OAAO,EAAEJ;IAAc,CAAE,CAAC;EAAA,CAC/C,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}