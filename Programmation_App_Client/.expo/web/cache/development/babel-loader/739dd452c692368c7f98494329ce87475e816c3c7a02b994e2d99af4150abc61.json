{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getTodoLists } from \"../components/todoList\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoListScreen() {\n  var _useContext = useContext(TokenContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    token = _useContext2[0],\n    setToken = _useContext2[1];\n  var _useContext3 = useContext(UsernameContext),\n    _useContext4 = _slicedToArray(_useContext3, 2),\n    username = _useContext4[0],\n    setUsername = _useContext4[1];\n  var todolist = getTodoLists(token, username);\n  useEffect(function () {\n    var loadTodoLists = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var todos = yield getTodoLists(username, token);\n          setTodoLists(todos || []);\n        } catch (err) {\n          setError(err.message);\n        }\n      });\n      return function loadTodoLists() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    loadTodoLists();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"TodoList\"\n    }), _jsx(FlatList, {\n      data: todoLists,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: item.title\n          })\n        });\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","useContext","View","Text","FlatList","Button","TextInput","StyleSheet","getTodoLists","TokenContext","UsernameContext","jsx","_jsx","jsxs","_jsxs","TodoListScreen","_useContext","_useContext2","_slicedToArray","token","setToken","_useContext3","_useContext4","username","setUsername","todolist","loadTodoLists","_ref","_asyncToGenerator","todos","setTodoLists","err","setError","message","apply","arguments","children","data","todoLists","keyExtractor","item","id","toString","renderItem","_ref2","title"],"sources":["/home/doguet221/Documents/l3/s1/programmationAppClient/tp4/Screen/todoListScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext} from 'react';\nimport { View, Text, FlatList, Button, TextInput, StyleSheet } from 'react-native';\nimport { getTodoLists } from '../components/todoList';\nimport { TokenContext, UsernameContext } from '../Context/Context'\n\nexport default function TodoListScreen() {\n  \n  const [token, setToken] = useContext(TokenContext);\n  const [username, setUsername] = useContext(UsernameContext);\n  const todolist = getTodoLists(token, username);\n\n  useEffect(() => {\n    const loadTodoLists = async () => {\n      try {\n        const todos = await getTodoLists(username, token);\n        setTodoLists(todos || []);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n\n    loadTodoLists();\n  }, []);\n  \n  return (\n    <View >\n      <Text>TodoList</Text>\n      <FlatList\n        data={todoLists}\n        keyExtractor={(item) => item.id.toString()}\n        renderItem={({ item }) => (\n          <View>\n            <Text>{item.title}</Text>\n          </View>\n        )}\n      />\n    </View>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAE9D,SAASC,YAAY;AACrB,SAASC,YAAY,EAAEC,eAAe;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElE,eAAe,SAASC,cAAcA,CAAA,EAAG;EAEvC,IAAAC,WAAA,GAA0Bf,UAAU,CAACQ,YAAY,CAAC;IAAAQ,YAAA,GAAAC,cAAA,CAAAF,WAAA;IAA3CG,KAAK,GAAAF,YAAA;IAAEG,QAAQ,GAAAH,YAAA;EACtB,IAAAI,YAAA,GAAgCpB,UAAU,CAACS,eAAe,CAAC;IAAAY,YAAA,GAAAJ,cAAA,CAAAG,YAAA;IAApDE,QAAQ,GAAAD,YAAA;IAAEE,WAAW,GAAAF,YAAA;EAC5B,IAAMG,QAAQ,GAAGjB,YAAY,CAACW,KAAK,EAAEI,QAAQ,CAAC;EAE9CxB,SAAS,CAAC,YAAM;IACd,IAAM2B,aAAa;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAChC,IAAI;UACF,IAAMC,KAAK,SAASrB,YAAY,CAACe,QAAQ,EAAEJ,KAAK,CAAC;UACjDW,YAAY,CAACD,KAAK,IAAI,EAAE,CAAC;QAC3B,CAAC,CAAC,OAAOE,GAAG,EAAE;UACZC,QAAQ,CAACD,GAAG,CAACE,OAAO,CAAC;QACvB;MACF,CAAC;MAAA,gBAPKP,aAAaA,CAAA;QAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GAOlB;IAEDT,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEZ,KAAA,CAACZ,IAAI;IAAAkC,QAAA,GACHxB,IAAA,CAACT,IAAI;MAAAiC,QAAA,EAAC;IAAQ,CAAM,CAAC,EACrBxB,IAAA,CAACR,QAAQ;MACPiC,IAAI,EAAEC,SAAU;MAChBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;QAAA,OACjB5B,IAAA,CAACV,IAAI;UAAAkC,QAAA,EACHxB,IAAA,CAACT,IAAI;YAAAiC,QAAA,EAAEI,IAAI,CAACK;UAAK,CAAO;QAAC,CACrB,CAAC;MAAA;IACP,CACH,CAAC;EAAA,CACE,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}