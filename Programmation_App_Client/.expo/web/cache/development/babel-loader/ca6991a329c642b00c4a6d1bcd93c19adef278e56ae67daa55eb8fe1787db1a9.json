{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport API_URL from \"./apiUrl\";\nvar SIGN_IN = `\nmutation SignIn($username: String!, $password: String!) {\n  signIn(username: $username, password: $password)\n}\n`;\nvar SIGN_UP = `\nmutation SignUp($username: String!, $password: String!) {\n  signUp(username: $username, password: $password)\n}`;\nvar TODO_LISTS_QUERY = `\n  query TodoLists($where: TodoListWhere) {\n    todoLists(where: $where) {\n      id\n      title\n    }\n}\n`;\nexport function fetchTodoLists() {\n  return _fetchTodoLists.apply(this, arguments);\n}\nfunction _fetchTodoLists() {\n  _fetchTodoLists = _asyncToGenerator(function* () {\n    try {\n      var response = yield fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: TODO_LISTS_QUERY,\n          variables: {\n            where: {}\n          }\n        })\n      });\n      var result = yield response.json();\n      console.log('API Response:', result);\n      if (result.errors) {\n        throw new Error(result.errors.map(function (error) {\n          return error.message;\n        }).join(', '));\n      }\n      return result.data.todoLists;\n    } catch (error) {\n      console.error('Error fetching todo lists:', error);\n      throw new Error('Could not fetch todo lists');\n    }\n  });\n  return _fetchTodoLists.apply(this, arguments);\n}\nexport function signIn(username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_IN,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.signIn;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function signUp(username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_UP,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors) {\n      throw jsonResponse.errors[0];\n    }\n    return jsonResponse.data.signUp;\n  }).catch(function (error) {\n    throw error;\n  });\n}","map":{"version":3,"names":["API_URL","SIGN_IN","SIGN_UP","TODO_LISTS_QUERY","fetchTodoLists","_fetchTodoLists","apply","arguments","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","query","variables","where","result","json","console","log","errors","Error","map","error","message","join","data","todoLists","signIn","username","password","then","jsonResponse","catch","signUp"],"sources":["/home/doguet221/Documents/l3/programmationAppClient/tp4/components/SignIn.js"],"sourcesContent":["import API_URL from './apiUrl';\n\n\nconst SIGN_IN = `\nmutation SignIn($username: String!, $password: String!) {\n  signIn(username: $username, password: $password)\n}\n`\n\nconst SIGN_UP = `\nmutation SignUp($username: String!, $password: String!) {\n  signUp(username: $username, password: $password)\n}`\n\nconst TODO_LISTS_QUERY = `\n  query TodoLists($where: TodoListWhere) {\n    todoLists(where: $where) {\n      id\n      title\n    }\n}\n`;\n\nexport async function fetchTodoLists() {\n  try {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: TODO_LISTS_QUERY,\n        variables: { where: {} },\n      }),\n    });\n\n    const result = await response.json();\n    console.log('API Response:', result);  // Ajoute ce log pour voir la réponse\n    \n    if (result.errors) {\n      throw new Error(result.errors.map(error => error.message).join(', '));\n    }\n\n    return result.data.todoLists;\n  } catch (error) {\n    console.error('Error fetching todo lists:', error);\n    throw new Error('Could not fetch todo lists');\n  }\n}\n\nexport function signIn(username, password) {\n    return fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: SIGN_IN,\n        variables: {\n          username: username,\n          password: password,\n        },\n      }),\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        if (jsonResponse.errors) {\n          throw jsonResponse.errors[0];\n        }\n        return jsonResponse.data.signIn; // Retourne le token (ou autre réponse) après connexion\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  export function signUp(username, password) {\n    return fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: SIGN_UP,\n        variables: {\n          username: username,\n          password: password,\n        },\n      }),\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        if (jsonResponse.errors) {\n          throw jsonResponse.errors[0];\n        }\n        return jsonResponse.data.signUp; // Retourne le token après inscription\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n  "],"mappings":";AAAA,OAAOA,OAAO;AAGd,IAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA,CAAC;AAED,IAAMC,OAAO,GAAI;AACjB;AACA;AACA,EAAE;AAEF,IAAMC,gBAAgB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,gBAAsBC,cAAcA,CAAA;EAAA,OAAAC,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAyBnC,SAAAF,gBAAA;EAAAA,eAAA,GAAAG,iBAAA,CAzBM,aAAgC;IACrC,IAAI;MACF,IAAMC,QAAQ,SAASC,KAAK,CAACV,OAAO,EAAE;QACpCW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAEb,gBAAgB;UACvBc,SAAS,EAAE;YAAEC,KAAK,EAAE,CAAC;UAAE;QACzB,CAAC;MACH,CAAC,CAAC;MAEF,IAAMC,MAAM,SAASV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,MAAM,CAAC;MAEpC,IAAIA,MAAM,CAACI,MAAM,EAAE;QACjB,MAAM,IAAIC,KAAK,CAACL,MAAM,CAACI,MAAM,CAACE,GAAG,CAAC,UAAAC,KAAK;UAAA,OAAIA,KAAK,CAACC,OAAO;QAAA,EAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MACvE;MAEA,OAAOT,MAAM,CAACU,IAAI,CAACC,SAAS;IAC9B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAM,IAAIF,KAAK,CAAC,4BAA4B,CAAC;IAC/C;EACF,CAAC;EAAA,OAAAnB,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,OAAO,SAASwB,MAAMA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACvC,OAAOvB,KAAK,CAACV,OAAO,EAAE;IACpBW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAEf,OAAO;MACdgB,SAAS,EAAE;QACTe,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA;MACZ;IACF,CAAC;EACH,CAAC,CAAC,CACCC,IAAI,CAAC,UAACzB,QAAQ;IAAA,OAAKA,QAAQ,CAACW,IAAI,CAAC,CAAC;EAAA,EAAC,CACnCc,IAAI,CAAC,UAACC,YAAY,EAAK;IACtB,IAAIA,YAAY,CAACZ,MAAM,EAAE;MACvB,MAAMY,YAAY,CAACZ,MAAM,CAAC,CAAC,CAAC;IAC9B;IACA,OAAOY,YAAY,CAACN,IAAI,CAACE,MAAM;EACjC,CAAC,CAAC,CACDK,KAAK,CAAC,UAACV,KAAK,EAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;AACN;AAEA,OAAO,SAASW,MAAMA,CAACL,QAAQ,EAAEC,QAAQ,EAAE;EACzC,OAAOvB,KAAK,CAACV,OAAO,EAAE;IACpBW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAEd,OAAO;MACde,SAAS,EAAE;QACTe,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA;MACZ;IACF,CAAC;EACH,CAAC,CAAC,CACCC,IAAI,CAAC,UAACzB,QAAQ;IAAA,OAAKA,QAAQ,CAACW,IAAI,CAAC,CAAC;EAAA,EAAC,CACnCc,IAAI,CAAC,UAACC,YAAY,EAAK;IACtB,IAAIA,YAAY,CAACZ,MAAM,EAAE;MACvB,MAAMY,YAAY,CAACZ,MAAM,CAAC,CAAC,CAAC;IAC9B;IACA,OAAOY,YAAY,CAACN,IAAI,CAACQ,MAAM;EACjC,CAAC,CAAC,CACDD,KAAK,CAAC,UAACV,KAAK,EAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}